# Задание 1.
# Создать двух пользователей (с помощью метода User.objects.create_user('username')).

>>> from news.models import *
>>> User.objects.create_user('user1')    
<User: user1>
>>> User.objects.create_user('user2')    
<User: user2>
>>> User.objects.all()              
<QuerySet [<User: user1>, <User: user2>]>

# Задание 2.
# Создать два объекта модели Author, связанные с пользователями.

>>> user1 = User.objects.all()[0]
>>> user2 = User.objects.all()[1]
>>> Author.objects.create(user=user1)
<Author: Author object (1)>
>>> Author.objects.create(user=user2)
<Author: Author object (2)>

# Задание 3.
# Добавить 4 категории в модель Category.

>>> category1 = Category.objects.create(name='Бизнес')
>>> category2 = Category.objects.create(name='Спорт')  
>>> category3 = Category.objects.create(name='Наука') 
>>> category4 = Category.objects.create(name='Политика')

# Задание 4.
# Добавить 2 статьи и 1 новость.

>>> post1 = Post.objects.create(author=Author.objects.all()[0], select=Post.article, title='УЕФА оштрафовал «Барселону» за подачу ложного финансового отчета', text='Союз европейских футбольных ассоциаций (УЕФА) оштрафовал катало
нскую «Барселону» на сумму €500 тыс. за подачу ложного финансового отчета. Об этом сообщает пресс-служба организации. Сине-гранатовые неверно указали прибыль за реализацию нематериальных активов в отчете за 2022 год (помимо тран
сферов игроков), что не является соответствующим доходом по текущим правилам.')
>>> post2 = Post.objects.create(author=Author.objects.all()[0], select=Post.article, title='Как не переплачивать за интернет и цифровые сервисы', text='Цифровые сервисы давно стали частью нашей повседневности. Онлайн-кинотеатр, 
электронная библиотека, хранилище данных, агрегатор скидок и музыка — вот неполный набор услуг, которым потребители пользуются чаще всего. Цифровые компании часто включают те или иные опции в тариф. Но чем больше сервисов появля
ется, тем сложнее становится потребителю. Например, Марина пользуется услугами одного сотового оператора уже более 10 лет. Пару лет назад она спонтанно подписалась на онлайн-кинотеатр, чтобы посмотреть конкретный сериал. Ежемеся
чные платежи продолжают списываться до сих пор, но сервисом девушка практически не пользуется. А недавно она обратила внимание, что ее родной оператор тоже предлагает ТВ и кино, но за гораздо меньшую плату. Игорь собрал целый на
бор различных сервисов. Он постоянно пользуется хранилищем данных и слушает музыку. Однако есть услуги, которые он автоматически оплачивает, но почти не использует. Например, подписка на библиотечный сервис работает максимум на 
пять-десять процентов от возможного. При выборе подписки нужно оценить свои реальные потребности. Например, сегодня многие пользователи все чаще общаются в мессенджерах, а значит, дополнительные гигабайты интернета будут весьма 
кстати. Для кого-то важным обстоятельством станет возможность интеграции со сторонними сервисами. Например, если вы уже пользуетесь музыкальной платформой, то свои плейлисты захочется перенести в новый сервис.')
>>> post3 = Post.objects.create(author=Author.objects.all()[1], select=Post.news, title='Засуха нанесла ущерб в сотни миллионов рублей российскому региону', text='В Чувашии ввели режим чрезвычайной ситуации (ЧС) из-за почвенной 
засухи, рассказал у себя в Telegram-канале глава региона Олег Николаев. «По предварительной оценке, пострадали посевы на площади 4,1 тысячи гектаров, сумма ущерба составляет более 211,2 миллиона рублей», — написал он. Глава реги
на добавил, что с 8 по 20 июля запас продуктивной влаги в пахотном слое почвы составлял менее 10 миллиметров. Режим ЧС уже введен в Канашском, Козловском, Урмарском и Янтиковском муниципальных округах. Минсельхозу поручили миним
изировать ущерб от засухи. Почвенная засуха связана с атмосферной засухой — явлением, при котором осадки более пяти миллиметров в сутки выпадают при средней температуре выше плюс 25 градусов в течение месяца. Ранее ведущий специ
алист центра «Фобос» Михаил Леус заявил, что в ближайшее время температура на несколько градусов выше нормы ожидается на юге Западной Сибири, в Новосибирской и Тоской областях, на Алтае, в Хакасии и на юге Красноярского края.') 

# Задание 5.
# Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).

>>> PostCategory.objects.create(post=post1, category=category2)
<PostCategory: PostCategory object (1)>
>>> PostCategory.objects.create(post=post1, category=category1) 
<PostCategory: PostCategory object (2)>
>>> PostCategory.objects.create(post=post2, category=category1) 
<PostCategory: PostCategory object (3)>
>>> PostCategory.objects.create(post=post2, category=category3) 
<PostCategory: PostCategory object (4)>
>>> PostCategory.objects.create(post=post3, category=category3) 
<PostCategory: PostCategory object (5)>
>>> PostCategory.objects.create(post=post3, category=category4) 
<PostCategory: PostCategory object (6)>

# Задание 6.
# Создать как минимум 4 комментария к разным объектам модели Post
# (в каждом объекте должен быть как минимум один комментарий).

>>> comment1 = Comment.objects.create(post=post1, user=user2, text='Я болею за Мадридский Реал!') 
>>> comment2 = Comment.objects.create(post=post1, user=user1, text='Я тоже:)')                    
>>> comment3 = Comment.objects.create(post=post2, user=user2, text='Спасибо за статью!')
>>> comment4 = Comment.objects.create(post=post3, user=user1, text='Ничего себе новости!')

# Задание 7.
# Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.

>>> post1.like()
>>> post2.like()
>>> comment1.like()
>>> comment2.like()
>>> comment4.dislike()

# Задание 8.
# Обновить рейтинги пользователей.

>>> author1 = Author.objects.all()[0]
>>> author1.update_rating()
>>> author2 = Author.objects.all()[1]  
>>> author2.update_rating()

# Задание 9.
# Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).

>>> Author.objects.all().order_by('-rating').values('user__username', 'rating')[0]
{'user__username': 'user1', 'rating': 8}

# Задание 10.
# Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи,
# основываясь на лайках/дислайках к этой статье.

>>> best_post = Post.objects.all().order_by('-rating')[0]                                                       
>>> best_post.datetime
datetime.datetime(2023, 7, 14, 16, 13, 4, 652387, tzinfo=datetime.timezone.utc)
>>> best_post.author.user    
<User: user1>
>>> best_post.rating                     
1
>>> best_post.title                           
'УЕФА оштрафовал «Барселону» за подачу ложного финансового отчета'
>>> best_post.preview()
'Союз европейских футбольных ассоциаций (УЕФА) оштрафовал каталонскую «Барселону» на сумму €500 тыс. за подачу ложного финан...'

# Задание 11.
# Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.

>>> Comment.objects.filter(post=best_post).values('datetime', 'user__username', 'rating', 'text') 
<QuerySet [{'datetime': datetime.datetime(2023, 7, 14, 16, 29, 24, 503432, tzinfo=datetime.timezone.utc), 'user__username': 'user2', 'rating': 1, 'text': 'Я болею за Мадридский Реал!'}, {'datetime': datetime.datetime(2023, 7, 14
, 16, 30, 8, 358693, tzinfo=datetime.timezone.utc), 'user__username': 'user1', 'rating': 1, 'text': 'Я тоже:)'}]>




